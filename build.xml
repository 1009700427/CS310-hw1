<!-- generate everything using "ant compile"-->
<project name="CS310 hw1" default="compile" basedir=".">
    <description>
        A sample build file for this project
    </description>

    <property name="source.dir" location="src"/>
    <property name="build.dir" location="bin"/>
    <property name="dist.dir" location="dist"/>
    <property name="doc.dir" location="doc"/>
    <property name="lib.dir" location="lib"/>

    <!-- set up some directories used by this project -->
    <target name="init" depends="clean" description="setup project directories">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${doc.dir}"/>
    </target>
    <!-- Generate javadocs for current project into docs dimapr -->
    <target name="doc" description="generate documentation">
        <mkdir dir="${doc.dir}"/>
        <javadoc sourcepath="${source.dir}" destdir="${doc.dir}">
            <fileset dir="${source.dir}"/>
        </javadoc>
    </target>

    <path id="class.path">
        <fileset dir="lib">
            <include name="junit-4.10.jar" />
            <include name="commons-io-2.6.jar"/>
        </fileset>
    </path>

    <!-- Compile the java code in src dir into build dir -->
    <target name="compile" depends="init" description="compile java sources">
        <javac includeantruntime="false" srcdir="${source.dir}" destdir="${build.dir}">
            <!--classpath="${lib.dir}/junit-4.10.jar"-->
            <classpath refid="class.path" />
        </javac>
    </target>
    <!-- Delete the build & doc directories and Emacs backup (*~) files -->
    <target name="clean" description="tidy up the workspace">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
        <delete dir="${doc.dir}"/>
    </target>

    <target name="dist" depends="compile">
        <jar destfile="${dist.dir}/SearchMap.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="SearchMap"/>
            </manifest>
        </jar>

    </target>

    <target name="run" depends="dist" >
        <java jar="${dist.dir}/SearchMap.jar" fork="true"/>
    </target>


    <target name="test" depends="compile">
        <junit printsummary="true" haltonfailure="false">
            <test name="TestSearchMap"/>
            <test name="TestFlightMap"/>
            <classpath>
                <pathelement location="${lib.dir}/junit-4.10.jar"/>
                <pathelement location="${build.dir}"/>
            </classpath>
        </junit>
    </target>

</project>